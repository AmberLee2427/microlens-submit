name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build_dist:
    name: Build distributions
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build sdist and wheel
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*

  verify_wheels:
    name: Verify wheel (${{ matrix.os }} / py${{ matrix.python }})
    needs: build_dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.8"
          - "3.11"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install and test wheel
        shell: bash
        env:
          MICROLENS_SKIP_EDITABLE_INSTALL: "1"
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python scripts/install_wheel.py dist
          python scripts/verify_cli_install.py
          pytest --maxfail=1 --disable-warnings -q

  publish_pypi:
    name: Publish to PyPI
    needs:
      - build_dist
      - verify_wheels
    runs-on: ubuntu-latest
    environment: pypi

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true

  build_conda:
    name: Build Conda package
    needs:
      - publish_pypi
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build
          python-version: 3.11
          auto-update-conda: false
          auto-activate-base: false
          add-pip-as-python-dependency: true
          channels: conda-forge,defaults

      - name: Install conda-build tooling
        shell: bash -l {0}
        run: conda install -n build -y conda-build

      - name: Build Conda package
        shell: bash -l {0}
        run: |
          conda run -n build conda build conda/recipe --output-folder conda-output
          mkdir -p conda-dist
          find conda-output -name '*.tar.bz2' -o -name '*.conda' -print -exec cp {} conda-dist/ \;

      - name: Upload Conda artifact
        uses: actions/upload-artifact@v4
        with:
          name: conda-package
          path: |
            conda-dist/*.tar.bz2
            conda-dist/*.conda

  github_release:
    name: Create GitHub release
    needs:
      - publish_pypi
      - build_conda
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download PyPI artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Download Conda artifacts
        uses: actions/download-artifact@v4
        with:
          name: conda-package
          path: dist/conda-dist
        continue-on-error: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
            dist/conda-dist/*.tar.bz2
          body_path: RELEASE_NOTES.md
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
